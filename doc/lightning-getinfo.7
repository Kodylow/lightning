.TH "LIGHTNING-GETINFO" "7" "" "" "lightning-getinfo"
.SH NAME
lightning-getinfo - Command to receive all information about the Core Lightning node\.
.SH SYNOPSIS

\fBgetinfo\fR

.SH DESCRIPTION

The \fBgetinfo\fR gives a summary of the current running node\.

.SH EXAMPLE JSON REQUEST
.nf
.RS
{
  "id": 82,
  "method": "getinfo",
  "params": {}
}
.RE

.fi
.SH RETURN VALUE

On success, an object is returned, containing:


.RS
.IP \[bu]
\fBid\fR (pubkey): The public key unique to this node
.IP \[bu]
\fBalias\fR (string): The fun alias this node will advertize (up to 32 characters)
.IP \[bu]
\fBcolor\fR (hex): The favorite RGB color this node will advertize (always 6 characters)
.IP \[bu]
\fBnum_peers\fR (u32): The total count of peers, connected or with channels
.IP \[bu]
\fBnum_pending_channels\fR (u32): The total count of channels being opened
.IP \[bu]
\fBnum_active_channels\fR (u32): The total count of channels in normal state
.IP \[bu]
\fBnum_inactive_channels\fR (u32): The total count of channels waiting for opening or closing transactions to be mined
.IP \[bu]
\fBversion\fR (string): Identifies what bugs you are running into
.IP \[bu]
\fBlightning-dir\fR (string): Identifies where you can find the configuration and other related files
.IP \[bu]
\fBblockheight\fR (u32): The highest block height we've learned
.IP \[bu]
\fBnetwork\fR (string): represents the type of network on the node are working (e\.g: \fBbitcoin\fR, \fBtestnet\fR, or \fBregtest\fR)
.IP \[bu]
\fBfees_collected_msat\fR (msat): Total routing fees collected by this node
.IP \[bu]
\fBour_features\fR (object, optional): Our BOLT #9 feature bits (as hexstring) for various contexts:
.RS
.IP \[bu]
\fBinit\fR (hex): features (incl\. globalfeatures) in our init message, these also restrict what we offer in open_channel or accept in accept_channel
.IP \[bu]
\fBnode\fR (hex): features in our node_announcement message
.IP \[bu]
\fBchannel\fR (hex): negotiated channel features we (as channel initiator) publish in the channel_announcement message
.IP \[bu]
\fBinvoice\fR (hex): features in our BOLT11 invoices

.RE

.IP \[bu]

\fBaddress\fR (array of objects, optional): The addresses we announce to the world:


.RS
.IP \[bu]
\fBtype\fR (string): Type of connection (one of "dns", "ipv4", "ipv6", "torv2", "torv3", "websocket")
.IP \[bu]
\fBport\fR (u16): port number

.RE

If \fBtype\fR is "dns", "ipv4", "ipv6", "torv2" or "torv3":


.RS
.IP \[bu]
\fBaddress\fR (string): address in expected format for \fBtype\fR

.RE

.IP \[bu]
\fBbinding\fR (array of objects, optional): The addresses we are listening on:
.RS
.IP \[bu]
\fBtype\fR (string): Type of connection (one of "local socket", "ipv4", "ipv6", "torv2", "torv3")
.IP \[bu]
\fBaddress\fR (string, optional): address in expected format for \fBtype\fR
.IP \[bu]
\fBport\fR (u16, optional): port number
.IP \[bu]
\fBsocket\fR (string, optional): socket filename (only if \fBtype\fR is "local socket")

.RE


.RE

The following warnings may also be returned:


.RS
.IP \[bu]
\fBwarning_bitcoind_sync\fR: Bitcoind is not up-to-date with network\.
.IP \[bu]
\fBwarning_lightningd_sync\fR: Lightningd is still loading latest blocks from bitcoind\.

.RE

On failure, one of the following error codes may be returned:


.RS
.IP \[bu]
-32602: Error in given parameters or some error happened during the command process\.

.RE
.SH EXAMPLE JSON RESPONSE
.nf
.RS
{
   "id": "02bf811f7571754f0b51e6d41a8885f5561041a7b14fac093e4cffb95749de1a8d",
   "alias": "SLICKERGOPHER",
   "color": "02bf81",
   "num_peers": 0,
   "num_pending_channels": 0,
   "num_active_channels": 0,
   "num_inactive_channels": 0,
   "address": [
      {
         "type": "torv3",
         "address": "fp463inc4w3lamhhduytrwdwq6q6uzugtaeapylqfc43agrdnnqsheyd.onion",
         "port": 9736
      },
      {
         "type": "torv3",
         "address": "ifnntp5ak4homxrti2fp6ckyllaqcike447ilqfrgdw64ayrmkyashid.onion",
         "port": 9736
      }
   ],
   "binding": [
      {
         "type": "ipv4",
         "address": "127.0.0.1",
         "port": 9736
      }
   ],
   "version": "v0.10.2",
   "blockheight": 724302,
   "network": "bitcoin",
   "msatoshi_fees_collected": 0,
   "fees_collected_msat": "0msat",
   "lightning-dir": "/media/vincent/Maxtor/C-lightning/node/bitcoin"
   "our_features": {
      "init": "8828226aa2",
      "node": "80008828226aa2",
      "channel": "",
      "invoice": "20024200"
   }
}
.RE

.fi
.SH AUTHOR

Vincenzo Palazzo \fI<vincenzo.palazzo@protonmail.com\fR> wrote the initial version of this man page, but many others did the hard work of actually implementing this rpc command\.

.SH SEE ALSO

\fBlightning-connect\fR(7), \fBlightning-fundchannel\fR(7), \fBlightning-listconfigs\fR(7)\.

.SH RESOURCES

Main web site: \fIhttps://github.com/ElementsProject/lightning\fR

\" SHA256STAMP:89e9739c02a3b8d39d83444fd50a816c58cf278906023609cec90b03b0add5c1
